# simple generational evolution
state = ec.simple.SimpleEvolutionState

# We're using the standard initialization method
init = ec.simple.SimpleInitializer

# We're using the standard (empty) finalization method
finish = ec.simple.SimpleFinisher

# We're using the standard (empty) exchange method
exch = ec.simple.SimpleExchanger

# We're using standard breeding -- no cross-population breeding
breed =	ec.simple.SimpleBreeder

# We're using standard evaluation -- no coevolution
eval =	ec.simple.SimpleEvaluator

#class used for statistics purposes
stat =	window.MyStatistics

# quit prematurely if I find something ideal
quit-on-run-complete =			true

# ec.Initializer
# ==============================
pop = ec.Population

# No multiple populations
pop.subpops =	1
pop.subpop.0 = 	ec.Subpopulation

# initial population
pop.subpop.0.duplicate-retries = 0

# ==You need to provide the species info for the subpopulation.==

# ec.simple.SimpleBreeder
# ==============================
# breed.elite.0 = 10

init = ec.gp.GPInitializer
pop.subpop.0.species.fitness = algorithm.LowerBetterFitness
pop.subpop.0.species = ec.gp.GPSpecies
pop.subpop.0.species.ind = ec.gp.GPIndividual
pop.subpop.0.duplicate-retries = 100
pop.subpop.0.species.ind.numtrees = 1
pop.subpop.0.species.ind.tree.0 = ec.gp.GPTree
pop.subpop.0.species.ind.tree.0.tc = tc0
pop.subpop.0.species.pipe = ec.breed.MultiBreedingPipeline
pop.subpop.0.species.pipe.generate-max = false
pop.subpop.0.species.pipe.num-sources = 2
pop.subpop.0.species.pipe.source.0 = ec.gp.koza.CrossoverPipeline
pop.subpop.0.species.pipe.source.0.prob = 0.9
pop.subpop.0.species.pipe.source.1 = ec.breed.ReproductionPipeline
pop.subpop.0.species.pipe.source.1.prob = 0.1

# Reproduction will use Tournament Selection 
breed.reproduce.source.0 = ec.select.TournamentSelection

gp.koza.xover.source.0 = ec.select.TournamentSelection
gp.koza.xover.source.1 = same
gp.koza.xover.ns.0 = ec.gp.koza.KozaNodeSelector
gp.koza.xover.ns.1 = same
gp.koza.xover.maxdepth = 17
gp.koza.xover.tries = 1

gp.koza.mutate.source.0 = ec.select.TournamentSelection
gp.koza.mutate.ns.0 = ec.gp.koza.KozaNodeSelector
gp.koza.mutate.build.0 = ec.gp.koza.GrowBuilder
gp.koza.mutate.maxdepth = 17
gp.koza.mutate.tries = 1

gp.breed.mutate-erc.tries = 1
gp.breed.mutate-erc.tree.0

gp.koza.grow.min-depth = 7
gp.koza.grow.max-depth = 7

gp.problem.stack = ec.gp.ADFStack
gp.adf-stack.context = ec.gp.ADFContext

gp.koza.ns.terminals = 0.1
gp.koza.ns.nonterminals = 0.9
gp.koza.ns.root = 0.0

gp.fs.size = 1
gp.fs.0 = ec.gp.GPFunctionSet
gp.fs.0.name = f0

#####
gp.type.a.size = 1
gp.type.a.0.name = nil
gp.type.s.size = 0

gp.tc.size = 1
gp.tc.0 = ec.gp.GPTreeConstraints
gp.tc.0.name = tc0
gp.tc.0.fset = f0
gp.tc.0.returns = nil

gp.tc.0.init = ec.gp.koza.FullBuilder
gp.tc.0.init.min-depth = 3
gp.tc.0.init.max-depth = 8

breedthreads = auto
evalthreads = auto
seed.0 = -2041175239
seed.1 = 2041175239
seed.2 = -1041175238
seed.3 = 1041175239
seed.4 = -3041175210
seed.5 = 3041175211
seed.6 = -4041175212
seed.7 = 4041175214

checkpoint = false
checkpoint-modulo = 1
checkpoint-prefix = ec

gp.nc.size = 16

gp.nc.0 = ec.gp.GPNodeConstraints
gp.nc.0.name = nc0
gp.nc.0.returns = nil
gp.nc.0.size = 0

gp.nc.1 = ec.gp.GPNodeConstraints
gp.nc.1.name = nc1 
gp.nc.1.returns = nil
gp.nc.1.size = 1
gp.nc.1.child.0 = nil

gp.nc.2 = ec.gp.GPNodeConstraints
gp.nc.2.name = nc2
gp.nc.2.returns = nil
gp.nc.2.size = 2
gp.nc.2.child.0 = nil
gp.nc.2.child.1 = nil

gp.nc.3 = ec.gp.GPNodeConstraints
gp.nc.3.name = nc3
gp.nc.3.returns = nil
gp.nc.3.size = 3
gp.nc.3.child.0 = nil
gp.nc.3.child.1 = nil
gp.nc.3.child.2 = nil

gp.nc.4 = ec.gp.GPNodeConstraints
gp.nc.4.name = nc4
gp.nc.4.returns = nil
gp.nc.4.size = 4
gp.nc.4.child.0 = nil
gp.nc.4.child.1 = nil
gp.nc.4.child.2 = nil
gp.nc.4.child.3 = nil

gp.nc.5 = ec.gp.GPNodeConstraints
gp.nc.5.name = nc5
gp.nc.5.returns = nil
gp.nc.5.size = 5
gp.nc.5.child.0 = nil
gp.nc.5.child.1 = nil
gp.nc.5.child.2 = nil
gp.nc.5.child.3 = nil
gp.nc.5.child.4 = nil

gp.nc.6 = ec.gp.GPNodeConstraints
gp.nc.6.name = nc6
gp.nc.6.returns = nil
gp.nc.6.size = 6
gp.nc.6.child.0 = nil
gp.nc.6.child.1 = nil
gp.nc.6.child.2 = nil
gp.nc.6.child.3 = nil
gp.nc.6.child.4 = nil
gp.nc.6.child.5 = nil

gp.nc.7 = ec.gp.GPNodeConstraints
gp.nc.7.name = nc7
gp.nc.7.returns = nil
gp.nc.7.size = 7
gp.nc.7.child.0 = nil
gp.nc.7.child.1 = nil
gp.nc.7.child.2 = nil
gp.nc.7.child.3 = nil
gp.nc.7.child.4 = nil
gp.nc.7.child.5 = nil
gp.nc.7.child.6 = nil

gp.nc.8 = ec.gp.GPNodeConstraints
gp.nc.8.name = nc8
gp.nc.8.returns = nil
gp.nc.8.size = 8
gp.nc.8.child.0 = nil
gp.nc.8.child.1 = nil
gp.nc.8.child.2 = nil
gp.nc.8.child.3 = nil
gp.nc.8.child.4 = nil
gp.nc.8.child.5 = nil
gp.nc.8.child.6 = nil
gp.nc.8.child.7 = nil

gp.nc.9 = ec.gp.GPNodeConstraints
gp.nc.9.name = nc9
gp.nc.9.returns = nil
gp.nc.9.size = 9
gp.nc.9.child.0 = nil
gp.nc.9.child.1 = nil
gp.nc.9.child.2 = nil
gp.nc.9.child.3 = nil
gp.nc.9.child.4 = nil
gp.nc.9.child.5 = nil
gp.nc.9.child.6 = nil
gp.nc.9.child.7 = nil
gp.nc.9.child.8 = nil

gp.nc.10 = ec.gp.GPNodeConstraints
gp.nc.10.name = nc10
gp.nc.10.returns = nil
gp.nc.10.size = 10
gp.nc.10.child.0 = nil
gp.nc.10.child.1 = nil
gp.nc.10.child.2 = nil
gp.nc.10.child.3 = nil
gp.nc.10.child.4 = nil
gp.nc.10.child.5 = nil
gp.nc.10.child.6 = nil
gp.nc.10.child.7 = nil
gp.nc.10.child.8 = nil
gp.nc.10.child.9 = nil

gp.nc.11 = ec.gp.GPNodeConstraints
gp.nc.11.name = nc11
gp.nc.11.returns = nil
gp.nc.11.size = 11
gp.nc.11.child.0 = nil
gp.nc.11.child.1 = nil
gp.nc.11.child.2 = nil
gp.nc.11.child.3 = nil
gp.nc.11.child.4 = nil
gp.nc.11.child.5 = nil
gp.nc.11.child.6 = nil
gp.nc.11.child.7 = nil
gp.nc.11.child.8 = nil
gp.nc.11.child.9 = nil
gp.nc.11.child.10 = nil

gp.nc.12 = ec.gp.GPNodeConstraints
gp.nc.12.name = nc12
gp.nc.12.returns = nil
gp.nc.12.size = 12
gp.nc.12.child.0 = nil
gp.nc.12.child.1 = nil
gp.nc.12.child.2 = nil
gp.nc.12.child.3 = nil
gp.nc.12.child.4 = nil
gp.nc.12.child.5 = nil
gp.nc.12.child.6 = nil
gp.nc.12.child.7 = nil
gp.nc.12.child.8 = nil
gp.nc.12.child.9 = nil
gp.nc.12.child.10 = nil
gp.nc.12.child.11 = nil

gp.nc.13 = ec.gp.GPNodeConstraints
gp.nc.13.name = nc13
gp.nc.13.returns = nil
gp.nc.13.size = 13
gp.nc.13.child.0 = nil
gp.nc.13.child.1 = nil
gp.nc.13.child.2 = nil
gp.nc.13.child.3 = nil
gp.nc.13.child.4 = nil
gp.nc.13.child.5 = nil
gp.nc.13.child.6 = nil
gp.nc.13.child.7 = nil
gp.nc.13.child.8 = nil
gp.nc.13.child.9 = nil
gp.nc.13.child.10 = nil
gp.nc.13.child.11 = nil
gp.nc.13.child.12 = nil

gp.nc.14 = ec.gp.GPNodeConstraints
gp.nc.14.name = nc14
gp.nc.14.returns = nil
gp.nc.14.size = 14
gp.nc.14.child.0 = nil
gp.nc.14.child.1 = nil
gp.nc.14.child.2 = nil
gp.nc.14.child.3 = nil
gp.nc.14.child.4 = nil
gp.nc.14.child.5 = nil
gp.nc.14.child.6 = nil
gp.nc.14.child.7 = nil
gp.nc.14.child.8 = nil
gp.nc.14.child.9 = nil
gp.nc.14.child.10 = nil
gp.nc.14.child.11 = nil
gp.nc.14.child.12 = nil
gp.nc.14.child.13 = nil

gp.nc.15 = ec.gp.GPNodeConstraints
gp.nc.15.name = nc15
gp.nc.15.returns = nil
gp.nc.15.size = 15
gp.nc.15.child.0 = nil
gp.nc.15.child.1 = nil
gp.nc.15.child.2 = nil
gp.nc.15.child.3 = nil
gp.nc.15.child.4 = nil
gp.nc.15.child.5 = nil
gp.nc.15.child.6 = nil
gp.nc.15.child.7 = nil
gp.nc.15.child.8 = nil
gp.nc.15.child.9 = nil
gp.nc.15.child.10 = nil
gp.nc.15.child.11 = nil
gp.nc.15.child.12 = nil
gp.nc.15.child.13 = nil
gp.nc.15.child.14 = nil
